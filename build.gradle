import java.nio.file.Files
import static java.nio.file.StandardCopyOption.REPLACE_EXISTING
/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
apply plugin: "java"
apply plugin: 'maven'
apply plugin: "distribution"
apply plugin: "idea"

group "org.logstash.inputs"

sourceCompatibility = JavaVersion.VERSION_1_8

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

}

repositories {
    mavenCentral()
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.0'
}

dependencies {
  compile 'com.amazonaws:aws-java-sdk-kms:1.11.14'
  compile 'com.amazonaws:amazon-kinesis-client:1.7.0'
  compile 'com.amazonaws:aws-java-sdk-core:1.11.16'
  compile 'commons-codec:commons-codec:1.9'
  compile 'com.fasterxml.jackson.core:jackson-databind:2.6.6'
  compile 'com.google.guava:guava:18.0'
  compile 'commons-lang:commons-lang:2.6'
  compile 'commons-logging:commons-logging:1.2'
  compile 'joda-time:joda-time:2.8.1'
  compile 'com.amazonaws:aws-java-sdk-s3:1.11.14'
  compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:2.6.6'
  compile 'com.fasterxml.jackson.core:jackson-core:2.6.6'
  compile 'com.amazonaws:aws-java-sdk-dynamodb:1.11.14'
  compile 'com.amazonaws:aws-java-sdk-cloudwatch:1.11.14'
  compile 'com.amazonaws:aws-java-sdk-kinesis:1.11.14'
  compile 'org.apache.httpcomponents:httpclient:4.5.2'
  compile 'org.apache.httpcomponents:httpcore:4.4.4'
  compile 'com.fasterxml.jackson.core:jackson-annotations:2.6.0'
  compile 'com.google.protobuf:protobuf-java:2.6.1'
}

task generateGemJarRequiresFile {
    doLast {
        File jars_file = file('lib/logstash-input-kinesis_jars.rb')
        jars_file.newWriter().withWriter { w ->
            w << "# AUTOGENERATED BY THE GRADLE SCRIPT. DO NOT EDIT.\n\n"
            w << "require \'jar_dependencies\'\n"
            configurations.runtime.allDependencies.each {
                w << "require_jar(\'${it.group}\', \'${it.name}\', \'${it.version}\')\n"
            }
        }
    }
}

task vendor {
    doLast {
        String vendorPathPrefix = "vendor/jar-dependencies"
        configurations.runtime.allDependencies.each { dep ->
            File f = configurations.runtime.filter { it.absolutePath.contains("${dep.group}/${dep.name}/${dep.version}") }.singleFile
            String groupPath = dep.group.replaceAll('\\.', '/')
            File newJarFile = file("${vendorPathPrefix}/${groupPath}/${dep.name}/${dep.version}/${dep.name}-${dep.version}.jar")
            newJarFile.mkdirs()
            Files.copy(f.toPath(), newJarFile.toPath(), REPLACE_EXISTING)
        }
    }
}

vendor.dependsOn(generateGemJarRequiresFile)
